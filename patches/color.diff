diff --git a/rxd.sh b/rxd.sh
index 122dc15..1a576bb 100755
--- a/rxd.sh
+++ b/rxd.sh
@@ -6,78 +6,126 @@
 GITHUB=$HOME/Documents/GitHub
 SCRIPTDIR=$(pwd)
 
+CDEF=" \033[0m"
+CCIN=" \033[0;36m"
+CGSC=" \033[0;32m"
+CRER=" \033[0;31m"
+CWAR=" \033[0;33m"
+b_CDEF=" \033[1;37m"
+b_CCIN=" \033[1;36m"
+b_CGSC=" \033[1;32m"
+b_CRER=" \033[1;31m"
+b_CWAR=" \033[1;33m"
+
+show() {
+  case $1 in
+    "-s" | "--success")
+      echo -e "${b_CGSC}${@/-s/}${CDEF}"
+      ;;
+    "-e" | "--error")
+      echo -e "${b_CRER}${@/-e/}${CDEF}"
+      ;;
+    "-w" | "--warning")
+      echo -e "${b_CWAR}${@/-w/}${CDEF}"
+      ;;
+    "-i" | "--info")
+      echo -e "${b_CCIN}${@/-i/}${CDEF}"
+      ;;
+    *)
+      echo -e "$@"
+      ;;
+  esac
+}
+
+prompt() {
+  case $1 in
+    "-e" | "--error")
+      echo -ne "${b_CRER}${@/-e/}${CDEF}"
+      ;;
+    "-w" | "--warning")
+      echo -ne "${b_CWAR}${@/-w/}${CDEF}"
+      ;;
+    "-i" | "--info")
+      echo -ne "${b_CCIN}${@/-i/}${CDEF}"
+      ;;
+    *)
+      echo -ne "$@"
+      ;;
+  esac
+}
+
 check() {
   case $1 in
     "dhcpcd")
       if pacman -Q $1 &>/dev/null; then
-        echo $1 is installed
+        show -i $1 is installed
         sleep 1
-        echo Activating service
+        show -i Activating service
         sleep 1
         if sudo systemctl enable --now dhcpcd.service; then
-          echo $1 enabled
+          show -s $1 enabled
           sleep 1
-          echo -n "Please enter the network interface name: "
+          prompt -i "Please enter the network interface name: "
           read interface
           if sudo ip link set $interface up; then
-            echo $interface is up
+            show -s $interface is up
             sleep 1
-            echo Rechecking connection...
+            show -i Rechecking connection...
             sleep 3
             if ping -c 1 8.8.8.8 &>/dev/null; then
-              echo Your connection is working
+              show -s Your connection is working
             else
-              echo There is still an error
+              show -e There is still an error
               sleep 1
-              echo Try again later
+              show -e Try again later
               exit
             fi
           else
-            echo There is still an error
+            show -e There is still an error
             sleep 1
-            echo Try again later
+            show -e Try again later
             exit
           fi
         else
-          echo $1 could not be enabled
+          show -e $1 could not be enabled
           sleep 1
-          echo Try again later
+          show -e Try again later
           exit
         fi
       else
         sudo pacman -S $1 --noconfirm
-        echo $1 has successfully installed
+        show -s $1 has successfully installed
         sleep 1
-        echo Activating service
+        show -i Activating service
         sleep 1
         if sudo systemctl enable --now dhcpcd.service; then
-          echo $1 enabled
+          show -s $1 enabled
           sleep 1
-          echo -n "Please enter the network interface name: "
+          prompt -i "Please enter the network interface name: "
           read interface
           if sudo ip link set $interface up; then
-            echo $interface is up
+            show -s $interface is up
             sleep 1
-            echo Rechecking connection...
+            show -i Rechecking connection...
             sleep 3
             if ping -c 1 8.8.8.8 &>/dev/null; then
-              echo Your connection is working
+              show -s Your connection is working
             else
-              echo There is still an error
+              show -e There is still an error
               sleep 1
-              echo Try again later
+              show -e Try again later
               exit
             fi
           else
-            echo There is still an error
+            show -e There is still an error
             sleep 1
-            echo Try again later
+            show -e Try again later
             exit
           fi
         else
-          echo $1 could not be enabled
+          show -e $1 could not be enabled
           sleep 1
-          echo Try again later
+          show -e Try again later
           exit
         fi
       fi
@@ -87,10 +135,10 @@ check() {
       ;;
     "grub")
       if pacman -Q $1 &>/dev/null; then
-        echo $1 is installed
+        show -s $1 is installed
         return 0
       else
-        echo $1 is not installed
+        show -w $1 is not installed
         return 1
       fi
       ;;
@@ -102,39 +150,39 @@ check() {
 pcheck() {
   if pacman -Q $@ &>/dev/null; then
     if [[ $# == 1 ]]; then
-      echo $1 is already installed
+      show -i $1 is already installed
     else
       FRS=""
       for i in $@; do
         FRS+="${i}, "
       done
-      echo $FRS are already installed
+      show -i $FRS are already installed
     fi
   else
     sudo pacman -S $@ --noconfirm
     if pacman -Q $@ &>/dev/null; then
       if [[ $# == 1 ]]; then
-        echo $1 has successfully installed
+        show -s $1 has successfully installed
       else
         FRS=""
         for i in $@; do
           FRS+="${i}, "
         done
-        echo $FRS have been successfully installed
+        show -s $FRS have been successfully installed
       fi
     else
       if [[ $# == 1 ]]; then
-        echo $1 has not successfully installed
+        show -e $1 has not successfully installed
         sleep 1
-        echo Try again later
+        show -e Try again later
       else
         FRS=""
         for i in $@; do
           FRS+="${i}, "
         done
-        echo $FRS have not successfully installed
+        show -e $FRS have not successfully installed
         sleep 1
-        echo Try again later
+        show -e Try again later
       fi
     fi
   fi
@@ -143,39 +191,39 @@ pcheck() {
 ycheck() {
   if yay -Q $@ &>/dev/null; then
     if [[ $# == 1 ]]; then
-      echo $1 is already installed
+      show -i $1 is already installed
     else
       FRS=""
       for i in $@; do
         FRS+="${i}, "
       done
-      echo $FRS are already installed
+      show -i $FRS are already installed
     fi
   else
     yay -S $@ --noconfirm
     if yay -Q $@ &>/dev/null; then
       if [[ $# == 1 ]]; then
-        echo $1 has successfully installed
+        show -s $1 has successfully installed
       else
         FRS=""
         for i in $@; do
           FRS+="${i}, "
         done
-        echo $FRS have been successfully installed
+        show -s $FRS have been successfully installed
       fi
     else
       if [[ $# == 1 ]]; then
-        echo $1 has not successfully installed
+        show -e $1 has not successfully installed
         sleep 1
-        echo Try again later
+        show -e Try again later
       else
         FRS=""
         for i in $@; do
           FRS+="${i}, "
         done
-        echo $FRS have not successfully installed
+        show -e $FRS have not successfully installed
         sleep 1
-        echo Try again later
+        show -e Try again later
       fi
     fi
   fi
@@ -188,9 +236,9 @@ wmcheck() {
         wmg=$(wmctrl -m | grep 'Name')
         read -a wma <<< $wmg
         wm=${wma[1]}
-        echo $wm
+        show -i $wm
       else
-        echo No WM
+        show -e No WM
       fi
       ;;
     "-n" | "--number")
@@ -215,9 +263,9 @@ dmcheck() {
         dmg=$(systemctl | grep 'Display Manager')
         read -a dma <<< $dmg
         dm=${dma[0]}
-        echo $dm
+        show -i $dm
       else
-        echo No DM
+        show -e No DM
       fi
       ;;
     "-n" | "--number")
@@ -238,27 +286,27 @@ dmcheck() {
 # Installer #
 
 echo
-cat rxd.txt
+show -e $(cat rxd.txt)
 cd $HOME
 echo
 sleep 1
-echo Starting...
+show -i Starting...
 sleep 1
 
 echo Checking internet connection...
 sleep 1
 if ping -c 1 8.8.8.8 &>/dev/null; then
-  echo You have a working internet connection
+  show -s You have a working internet connection
 else
-  echo "You don't have a working internet connection"
+  show -e "You don't have a working internet connection"
   sleep 1
-  echo "Checking for dhcpcd..."
+  show -i "Checking for dhcpcd..."
   sleep 1
   check dhcpcd
 fi
 sleep 1
 
-echo Setting up folders...
+show -i Setting up folders...
 sleep 1
 pcheck xdg-user-dirs
 xdg-user-dirs-update
@@ -270,19 +318,19 @@ else
 fi
 sleep 1
 
-echo Installing + Configuring Git + GitHub CLI...
+show -i Installing + Configuring Git + GitHub CLI...
 sleep 1
 pcheck git github-cli
-echo Your existing Git settings are:
-echo $(git config --global user.name)
-echo $(git config --global user.email)
-echo -n "Would you like to change them? [Y/n]: "
+show -i Your existing Git settings are:
+show -i $(git config --global user.name)
+show -i $(git config --global user.email)
+prompt -i "Would you like to change them? [Y/n]: "
 read gchange
 case $gchange in
   "y" | "yes")
-    echo -n "Git Name: "
+    prompt -i "Git Name: "
     read gname
-    echo -n "Git Emai: "
+    prompt -i "Git Emai: "
     read gemail
     git config --global --add user.name $gname
     git config --global --add user.email $gemail
@@ -290,33 +338,33 @@ case $gchange in
   "n" | "no")
     ;;
   *)
-    echo -n "Git Name: "
+    show -i "Git Name: "
     read gname
-    echo -n "Git Email: "
+    show -i "Git Email: "
     read gemail
     git config --global --add user.name $gname
     git config --global --add user.email $gemail
     ;;
 esac
 sleep 1
-echo Git is now configured
+show -s Git is now configured
 sleep 1
-echo gh will not be used for now
+show -w gh will not be used for now
 sleep 1
 
-echo Configuring Grub...
+show -i Configuring Grub...
 sleep 1
 cd $GITHUB
 if check grub; then
   if [[ -e grub2-themes ]]; then
-    echo You have some Grub themes downloaded
+    show -i You have some Grub themes downloaded
     sleep 1
-    echo -n 'Would you like to install one? [y/N]: '
+    prompt -i 'Would you like to install one? [y/N]: '
     read gt
     case $gt in
       "y" | "yes")
         sudo grub2-themes/install.sh
-        echo Grub theme set
+        show -s Grub theme set
         ;;
       "n" | "no")
         ;;
@@ -327,93 +375,93 @@ if check grub; then
     git clone https://github.com/vinceliuice/grub2-themes.git
     cd grub2-themes
     sudo ./install.sh
-    echo "Grub themes downloaded and set"
+    show -s "Grub themes downloaded and set"
   fi
 else
-  echo As grub is not installed, this step will be skipped
+  show -w As grub is not installed, this step will be skipped
   sleep 1
-  echo Your current bootloader has not been touched
+  show -i Your current bootloader has not been touched
 fi
 cd $HOME
 sleep 1
 
-echo Installing yay...
+show -i Installing yay...
 sleep 1
 cd $GITHUB
 if [[ -e yay ]]; then
-  echo Yay is installed
+  show -s Yay is installed
   sleep 1
-  echo Checking for installation...
+  show -i Checking for installation...
   sleep 1
   if yay -V &>/dev/null; then
-    echo All is working
+    show -s All is working
   else
-    echo yay will be redownloaded + incase of broken files and then installed
+    show -w yay will be redownloaded + incase of broken files and then installed
     sleep 1
     sudo rm -r yay
     git clone https://aur.archlinux.org/yay.git
     cd yay
     makepkg -si --noconfirm
-    echo yay has successfully installed
+    show -s yay has successfully installed
   fi
 else
   git clone https://aur.archlinux.org/yay.git
   cd yay
   makepkg -si --noconfirm
-  echo yay has successfully installed
+  show -s yay has successfully installed
 fi
 cd $HOME
 sleep 1
 
-echo Installing Xorg + apps...
+show -i Installing Xorg + apps...
 sleep 1
 pcheck xorg-server xorg-xinit xorg-twm xorg-xclock xterm mesa
 check xorg
 sleep 1
 
-echo Installing LightDM...
+show -i Installing LightDM...
 sleep 1
 pcheck lightdm lightdm-webkit2-greeter
 ycheck lightdm-webkit-theme-aether
 sleep 1
-echo LightDM will be activated later
+show -i LightDM will be activated later
 sleep 1
 
-echo Install Virtualbox Guest Additions...
+show -i Install Virtualbox Guest Additions...
 sleep 1
 pcheck virtualbox-guest-utils
 sleep 1
-echo The Guest Additions will be activated later
+show -w The Guest Additions will be activated later
 sleep 1
 
-echo Installing i3...
+show -i Installing i3...
 sleep 1
-echo There are 3 versions of i3 to install:
+show -i There are 3 versions of i3 to install:
 sleep 1
-echo 1. i3
-echo 2. i3 gaps
-echo 3. i3 gaps rounded
+show -i 1. i3
+show -i 2. i3 gaps
+show -i 3. i3 gaps rounded
 sleep 1
-echo -n "Which one would you like installed? (1, 2, 3) [3]: "
+prompt -i "Which one would you like installed? (1, 2, 3) [3]: "
 read i3v
 case $i3v in
   "1")
-    echo i3 it is...
+    show -i i3 it is...
     sleep 1
     pcheck i3-wm
     ;;
   "2")
-    echo i3 gaps it is...
+    show -i i3 gaps it is...
     sleep 1
     pcheck i3-gaps
     ;;
   "3")
-    echo i3 gaps rounded it is...
+    show -i i3 gaps rounded it is...
     sleep 1
     ycheck i3-gaps-rounded-git
     ;;
   *)
-  echo Defaulting to i3 gaps rounded...
+  show -i Defaulting to i3 gaps rounded...
   sleep 1
   ycheck i3-gaps-rounded-git 
   ;;
@@ -421,43 +469,43 @@ esac
 pcheck i3status i3lock dmenu
 sleep 1
 
-echo Installing wmctrl...
+show -i Installing wmctrl...
 sleep 1
 pcheck wmctrl
 sleep 1
 
-echo Installing Kitty...
+show -i Installing Kitty...
 sleep 1
 pcheck kitty
 sleep 1
 
-echo Installing ZSH + OH My ZSH...
+show -i Installing ZSH + OH My ZSH...
 sleep 1
 pcheck zsh
 if [[ -e $HOME/.oh-my-zsh ]]; then
-  echo Oh My ZSH is already installed
+  show -i Oh My ZSH is already installed
 else
   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
 fi
 sleep 1
 
-echo Installing Neofetch + fet.sh...
+show -i Installing Neofetch + fet.sh...
 sleep 1
 pcheck neofetch
 ycheck fet.sh-git
 sleep 1
 
-echo Installing Nitrogen...
+show -i Installing Nitrogen...
 sleep 1
 pcheck nitrogen
 sleep 1
 
-echo Installing Wallpapers...
+show -i Installing Wallpapers...
 sleep 1
 if [[ -e $SCRIPTDIR/walls ]]; then
-  echo You already have some wallpapers
+  show -w You already have some wallpapers
   sleep 1
-  echo Copying to a more suitable place...
+  show -w Copying to a more suitable place...
   sudo cp -r $SCRIPTDIR/walls /usr/share/
 else
   cd $GITHUB
@@ -465,15 +513,15 @@ else
   sudo cp -r $SCRIPTDIR/walls /usr/share
   cd $HOME
 fi
-echo "When selecting the walls folder, select at /usr/share/walls"
-echo -n "Would you like to set one now? [y/N]: "
+show -i "When selecting the walls folder, select at /usr/share/walls"
+prompt -i "Would you like to set one now? [y/N]: "
 read nitro
 case $nitro in
   "y" | "yes")
     if wmcheck -n; then
       nitrogen
     else
-      echo There is no WM running so nitrogen cannot be opened at this moment
+      show -w There is no WM running so nitrogen cannot be opened at this moment
     fi
     ;;
   "n" | "no")
@@ -484,61 +532,61 @@ esac
 sleep 1
 
 
-echo Installing Text Editors...
+show -i Installing Text Editors...
 sleep 1
 pcheck neovim geany
 sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
 sleep 1
 
-echo Installing File Managers...
+show -i Installing File Managers...
 sleep 1
 pcheck ranger thunar
 sleep 1
 
-echo Installing LxAppearance...
+show -i Installing LxAppearance...
 sleep 1
 pcheck lxappearance
 sleep 1
 
-echo Installing Ant + Kripton GTK Themes...
+show -i Installing Ant + Kripton GTK Themes...
 sleep 1
 cd $GITHUB
 git clone https://github.com/EliverLara/Kripton.git
 git clone https://github.com/EliverLara/Ant.git
 sudo cp -r Kripton Ant $HOME/.themes
-echo Themes installed
+show -s Themes installed
 cd $HOME
 sleep 1
 
-echo Installing Paper Icons...
+show -i Installing Paper Icons...
 sleep 1
 ycheck paper-icon-theme-git
 sleep 1
 
-echo Installing Fonts...
+show -i Installing Fonts...
 sleep 1
 pcheck xorg-fonts-misc
 ycheck ttf-fira-code ttf-work-sans ttf-spacemono ttf-unifont siji-git
 sleep 1
 
-echo Installing Polybar...
+show -i Installing Polybar...
 sleep 1
 ycheck polybar
 sleep 1
 
-echo Enabling services...
+show -i Enabling services...
 sudo systemctl enable vboxservice.service sshd.service
 if dmcheck -n; then
   dm=$(dmcheck -s)
-  echo Disabling $dm...
+  show -w Disabling $dm...
   sudo systemctl disable $dm
 else
   :
 fi
 sudo systemctl enable lightdm.service
-echo The configuring is up to you now
+show -s The configuring is up to you now
 sleep 1
-echo -n "Would you like to clean your system up? [y/N]: "
+prompt -i "Would you like to clean your system up? [y/N]: "
 read clean
 case $clean in
   "y" | "yes")
@@ -553,6 +601,6 @@ case $clean in
     ;;
 esac
 sleep 1
-echo Enjoy your new Arch Linux install
+show -s Enjoy your new Arch Linux install
 sleep 2
 exit
\ No newline at end of file
